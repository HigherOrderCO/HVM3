// A minimal example of Optimal Evaluation (:

// Bits (Native)
data Bits {
  #O{pred}
  #I{pred}
  #E{}
}

// Repeated Application
@rep(n f x) = ~ n !f !x {
  0: x
  1+p: !&0{f0 f1}=f (f0 @rep(p f1 x))
}

// Squared Application
@sqr(n f x) = ~ n !f !x {
  0: x
  1+p:
    !&0{p0 p1}=(+ p 1)
    !&0{fA f0}=f
    !&0{f1 f2}=fA
    @sqr((/ p0 2) λk(f0 (f1 k)) @rep((% p1 2) f2 x))
}

// Bits (Scott)
@o(x) = λo λi λe (o x)
@i(x) = λo λi λe (i x)
@e    = λo λi λe e

// Bits increment
@inc(x) = λo λi λe (x i λop(o @inc(op)) e)

// Creates an all-zero Bits
@zero(s) = ~s{
  0: @e
  1+p: @o(@zero(p))
}

// Converts a Bits to an U32
@bits_to_u32(xs) = (xs
  λp0 (+ (* 2 @bits_to_u32(p0)) 0)
  λp1 (+ (* 2 @bits_to_u32(p1)) 1)
  0)

// Applies 'inc' N times to zero
@main = @bits_to_u32(@sqr(1234567 λx@inc(x) @zero(32)))
