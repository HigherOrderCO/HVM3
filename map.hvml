import Prelude.hvml

// data Maybe {
  // #None
  // #Some{value}
// }

// data List {
  // #Nil
  // #Cons{head tail}
// }

// Map<K, V> = [Entry<K, V>]
data Entry {
  #Entry{key val}
}

// swap :: Map<K, V> -> K -> V -> (Map<K, V>, Maybe<V>)
@map_swap(map k v) =
  ~map !k !v {
    #Nil: &0{[#Entry{k v}] #None}

    #Cons{e es}: ~e { #Entry{ek ev}:
      ! &{k1 k2} = k
      ! &{ek1 ek2} = ek

      ~(== k1 ek1) !v !es !ev !k2 {
        0:
          ! &0{new_es old_v} = @map_swap(es k2 v)
          &0{#Cons{#Entry{ek2 ev} new_es} old_v}

        _: &0{#Cons{#Entry{k2 v} es} #Some{ev}}
      }
    }
  }

@main =
  ! m = []
  ! &0{m _} = @map_swap(m "foo" 123)
  m
